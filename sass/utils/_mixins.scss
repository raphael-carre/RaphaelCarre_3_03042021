@mixin get-fonts($font-list)
{
    @each $font in $font-list
    {
        @font-face 
        {
            font-family: map-get($font, family);
            src: url(map-get($font, source)) format(map-get($font, format));
            font-weight: map-get($font, weight);
            font-style: map-get($font, style);
        }
    }
}

@mixin screen-sizes($sizes)
{
    @each $name, $values in $sizes
    {
        @media only screen and (min-width: map-get($values, breakpoint))
        {
            :root
            {
                --spacing: #{map-get($values, spacing)};
            }
            
            body *
            {
                font-size: map-get($values, font);
            }

            h1
            {
                font-size: map-get($values, h1);
            }

            h2
            {
                font-size: map-get($values, h2);
            }

            h3
            {
                font-size: map-get($values, h3);
            }
        }
    }
}

// This mixin needs a map (width-in-px: font-size) or a size (px)
// If map => returns media query with font size value
// If size => returns media query with the content
@mixin media-query($size)
{
    @if type-of($size) == 'map'
    {
        @each $key, $value in $size
        {
            @media only screen and (min-width: #{$key})
            {
                font-size: $value;
            }
        }
    }
    @else
    {
        @media only screen and (min-width: #{$size})
        {
            @content;
        }
    }
}

@mixin wide-screen
{
    @media only screen and (min-width: map-get(map-get(map-get($dimensions, screen-sizes), wide), breakpoint))
    {
        @content;
    }
}